 /* Centre for Electronic Design and Technology, NSIT, New Delhi
 * 
 * Dhananjay V Gadre, dhananjay.gadre@gmail.com
 * Rohit Dureja, rohit.dureja@gmail.com
 * Shanjit Singh Jajmann, shanjitsingh@gmail.com
 */
 
/* Defines the base address of the memories and peripherals */
#include "inc/hw_memmap.h"

/* Defines the common types and macros */
#include "inc/hw_types.h"

/* Defines and Macros for GPIO API */
#include "driverlib/gpio.h"

/* Prototypes for the system control driver */
#include "driverlib/sysctl.h"

/* Prototypes for the SysTick driver. */
#include "driverlib/systick.h"

/* Delay Function */
void Delay(unsigned long ulSeconds)
{

    /* Loop while there are more seconds to wait. */
	while(ulSeconds--)
    {
        /* Wait until the SysTick value is less than 1000. */
        while(SysTickValueGet() > 1000)
        {
        }

        /* Wait until the SysTick value is greater than 1000. */
        while(SysTickValueGet() < 1000)
        {
        }
    }
}

int main(void)
{
    /* Set the clocking to directly run from the crystal at 8MHz */
	SysCtlClockSet(SYSCTL_SYSDIV_1 | SYSCTL_USE_OSC | SYSCTL_OSC_MAIN | SYSCTL_XTAL_7_37MHZ);

	/* Set the clock for the GPIO Port C */
	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOC);

	/* Set the type of the GPIO Pin */
	GPIOPinTypeGPIOOutput(GPIO_PORTC_BASE, GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7);
	
	/* GPIO Pins 5, 6, 7 on PORT C initialized to 1
	 * All LEDs Off.
	 * */
	GPIOPinWrite(GPIO_PORTC_BASE, GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7, GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7);
	
    /* Set up the period for the SysTick timer.  The SysTick timer period will
     be equal to the system clock, resulting in a period of 1 second.
    */
    SysTickPeriodSet(SysCtlClockGet());

    /* Enable SysTick. */
    SysTickEnable();
	
	while(1)
    {
		/* Make High */
		GPIOPinWrite(GPIO_PORTC_BASE, GPIO_PIN_5, GPIO_PIN_5);

		/* Delay 1 second */
		Delay(1);

		/* Make Low */
		GPIOPinWrite(GPIO_PORTC_BASE, GPIO_PIN_5, 0);
		
		/* Delay 1 second */
		Delay(1);
	}

}
